package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.repository.query.Param;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.ui.Model;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;


@Controller    // This means that this class is a Controller

public class MyProfileController {
    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    @Autowired
    UserRepository userRepository;
    @Autowired
    UserRoleRepository userRoleRepository;


    @RequestMapping("/myProfile")
    public String myProfile(Model model){
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        User currentUser = userRepository.findByUsername(auth.getName());
        model.addAttribute("loggedInUser", currentUser);
        model.addAttribute("role", userRoleRepository.findRoleByUserName(currentUser.getUserid()));
        return "myProfile";
    }


    @RequestMapping("/editMyProfile")
    public String editMyProfile(Model model){
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        User currentUser = userRepository.findByUsername(auth.getName());

        model.addAttribute("loggedInUser", currentUser);
        model.addAttribute("role", userRoleRepository.findRoleByUserName(currentUser.getUserid()));

        return "editMyProfile";
    }


    @Modifying
    @PostMapping("/editMyProfile")
    public ModelAndView saveMyProfile(@Param("user") User user) {

        user.setUserid(userRepository.findByUsername(user.getUsername()).getUserid());

        try {
            userRepository.save(user);
        }
        catch (DataIntegrityViolationException ex) {
            System.out.println("Exception: " + ex.toString());
            return new ModelAndView("redirect:editMyProfile?error");
        }

        return new ModelAndView("redirect:/myProfile");
    }

    @Modifying
    @PostMapping("/aui")
    public ModelAndView savePasswordAui(@Param("username") String username, @Param("oldPassword") String oldPassword, @Param("newPassword") String newPassword, @Param("confirm") String confirm) {

        User user = userRepository.findByUsername(username);

        user.setUserid(userRepository.findByUsername(user.getUsername()).getUserid());

        if(oldPassword.equals(user.getPassword())){
            if(newPassword.equals(confirm) && !newPassword.equals(""))
                user.setPassword(confirm);
            else
                return new ModelAndView("redirect:myProfile?error");

        }else{
            return new ModelAndView("redirect:myProfile?error");
        }

        try {
            userRepository.save(user);
        }
        catch (DataIntegrityViolationException ex) {
            System.out.println("Exception: " + ex.toString());
            return new ModelAndView("redirect:editMyProfile?error");
        }

        return new ModelAndView("redirect:/myProfile?success");
    }

}
