package hello;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.ui.Model;
import org.springframework.web.servlet.ModelAndView;

import java.util.List;


@Controller    // This means that this class is a Controller

public class MyProfileController {
    // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data

    @Autowired
    UserRepository userRepository;


    @RequestMapping("/myProfile")
    public String myProfile(@RequestParam(value="usrId", defaultValue = "-1", required = false) long usrId,
                       Model model){

        if(usrId != -1){model.addAttribute("loggedInUser", userRepository.findByUserid(usrId));}
        return "myProfile";
    }

    @RequestMapping("/aui")
    public String aui(){
        return "aui";
    }

    @RequestMapping("/editMyProfile")
    public String editMyProfile(@RequestParam(value="username", defaultValue = "-1") String username, Model model){

        System.out.println("abc");
        if(username != "-1"){
            User loggedInUser = userRepository.findByUsername(username);
            model.addAttribute("loggedInUser", loggedInUser);
        }
        else{
            User currentUser = new User();
            model.addAttribute("currentUser", currentUser);
            model.addAttribute("isAdmin", false);
            model.addAttribute("isUser", false);
        }
        return "editMyProfile";
    }


    @Modifying
    @PostMapping("/editMyProfile")
    public ModelAndView saveMyProfile(@Param("user") User user,
                                 @Param("newPassword") String newPassword, @Param("confirm") String confirm) {

        //String username="mtester";
        //long userId = -1;
        //userId = userRepository.findUserIdByUsername(username);

        System.out.println(user.getUserid());
        System.out.println(user.getUsername());

        if(newPassword.equals(confirm) && !newPassword.equals("")) {

            user.setPassword(confirm);
        }

        try {
            userRepository.save(user);
        }
        catch (DataIntegrityViolationException ex) {
            System.out.println("Exception: " + ex.toString());
            return new ModelAndView("redirect:editUser?usrId=" + user.getUserid() + "&error");
        }

        return new ModelAndView("redirect:/myProfile");
    }


}
